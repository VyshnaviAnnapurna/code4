import speech_recognition as sr
import pyttsx3
import datetime
import wikipedia
import webbrowser
import os
import smtplib
import random

# Initialize the recognizer
recognizer = sr.Recognizer()

# Initialize the text-to-speech engine
engine = pyttsx3.init()

# Function to convert text to speech
def speak(text):
    engine.say(text)
    engine.runAndWait()

# Function to greet the user
def greet():
    hour = datetime.datetime.now().hour
    if 0 <= hour < 12:
        speak("Good morning!")
    elif 12 <= hour < 18:
        speak("Good afternoon!")
    else:
        speak("Good evening!")
    speak("How can I assist you today?")

# Function to listen to user's voice
def listen():
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source)
        audio = recognizer.listen(source)
    
    try:
        print("Recognizing...")
        query = recognizer.recognize_google(audio).lower()
        print("You said:", query)
        return query
    except sr.UnknownValueError:
        print("Sorry, I couldn't understand what you said.")
        return ""
    except sr.RequestError as e:
        print("Could not request results from Google Speech Recognition service; {0}".format(e))
        return ""

# Function to send email
def send_email(to, subject, body):
    # Configure your email settings
    # Make sure to allow less secure apps access in your email settings
    # For Gmail, you may need to enable "Allow less secure apps" in your Google account settings
    email_address = "your_email@gmail.com"
    password = "your_password"

    server = smtplib.SMTP("smtp.gmail.com", 587)
    server.ehlo()
    server.starttls()
    server.login(email_address, password)
    message = f"Subject: {subject}\n\n{body}"
    server.sendmail(email_address, to, message)
    server.close()

# Main function to run the assistant
def main():
    greet()
    while True:
        query = listen()
        if "wikipedia" in query:
            speak("Searching Wikipedia...")
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2)
            speak("According to Wikipedia")
            speak(results)
        elif "open youtube" in query:
            webbrowser.open("https://www.youtube.com/")
        elif "open google" in query:
            webbrowser.open("https://www.google.com/")
        elif "play music" in query:
            music_dir = "C:\\Users\\YourUsername\\Music"  # Change this to your music directory
            songs = os.listdir(music_dir)
            random_song = random.choice(songs)
            os.startfile(os.path.join(music_dir, random_song))
        elif "send email" in query:
            try:
                speak("What should I say?")
                email_body = listen()
                speak("Whom should I send it to?")
                recipient = listen()
                send_email(recipient, "Subject", email_body)
                speak("Email has been sent successfully.")
            except Exception as e:
                print(e)
                speak("Sorry, I am unable to send the email at the moment.")
        elif "exit" in query:
            speak("Goodbye! Have a nice day.")
            exit()
        else:
            speak("I'm sorry, I didn't understand that. Can you please repeat?")

if __name__ == "__main__":
    main()
